#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoAnemia
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDAnemia")]
	public partial class BDAnemiaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAlimento(Alimento instance);
    partial void UpdateAlimento(Alimento instance);
    partial void DeleteAlimento(Alimento instance);
    partial void InsertCuestionario(Cuestionario instance);
    partial void UpdateCuestionario(Cuestionario instance);
    partial void DeleteCuestionario(Cuestionario instance);
    partial void InsertDetalleHistoria(DetalleHistoria instance);
    partial void UpdateDetalleHistoria(DetalleHistoria instance);
    partial void DeleteDetalleHistoria(DetalleHistoria instance);
    partial void InsertDiagnostico(Diagnostico instance);
    partial void UpdateDiagnostico(Diagnostico instance);
    partial void DeleteDiagnostico(Diagnostico instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertHistoria(Historia instance);
    partial void UpdateHistoria(Historia instance);
    partial void DeleteHistoria(Historia instance);
    partial void InsertIndice(Indice instance);
    partial void UpdateIndice(Indice instance);
    partial void DeleteIndice(Indice instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertPregunta(Pregunta instance);
    partial void UpdatePregunta(Pregunta instance);
    partial void DeletePregunta(Pregunta instance);
    partial void InsertReceta(Receta instance);
    partial void UpdateReceta(Receta instance);
    partial void DeleteReceta(Receta instance);
    partial void InsertSintoma(Sintoma instance);
    partial void UpdateSintoma(Sintoma instance);
    partial void DeleteSintoma(Sintoma instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertValores(Valores instance);
    partial void UpdateValores(Valores instance);
    partial void DeleteValores(Valores instance);
    #endregion
		
		public BDAnemiaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BDAnemiaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDAnemiaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDAnemiaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDAnemiaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDAnemiaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alimento> Alimento
		{
			get
			{
				return this.GetTable<Alimento>();
			}
		}
		
		public System.Data.Linq.Table<Cuestionario> Cuestionario
		{
			get
			{
				return this.GetTable<Cuestionario>();
			}
		}
		
		public System.Data.Linq.Table<DetalleHistoria> DetalleHistoria
		{
			get
			{
				return this.GetTable<DetalleHistoria>();
			}
		}
		
		public System.Data.Linq.Table<Diagnostico> Diagnostico
		{
			get
			{
				return this.GetTable<Diagnostico>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctor
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Historia> Historia
		{
			get
			{
				return this.GetTable<Historia>();
			}
		}
		
		public System.Data.Linq.Table<Indice> Indice
		{
			get
			{
				return this.GetTable<Indice>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Paciente
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Pregunta> Pregunta
		{
			get
			{
				return this.GetTable<Pregunta>();
			}
		}
		
		public System.Data.Linq.Table<Receta> Receta
		{
			get
			{
				return this.GetTable<Receta>();
			}
		}
		
		public System.Data.Linq.Table<Sintoma> Sintoma
		{
			get
			{
				return this.GetTable<Sintoma>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Valores> Valores
		{
			get
			{
				return this.GetTable<Valores>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarHistoria")]
		public ISingleResult<spAgregarHistoriaResult> spAgregarHistoria([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fechaCreacion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPaciente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fechaCreacion, idPaciente);
			return ((ISingleResult<spAgregarHistoriaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarHistorias")]
		public ISingleResult<spListarHistoriasResult> spListarHistorias()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spListarHistoriasResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarHistoriaPaciente")]
		public ISingleResult<spListarHistoriaPacienteResult> spListarHistoriaPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPaciente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPaciente);
			return ((ISingleResult<spListarHistoriaPacienteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarDetalleDoctorVisualizar")]
		public ISingleResult<spListarDetalleDoctorVisualizarResult> spListarDetalleDoctorVisualizar([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDetalleHistoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDetalleHistoria);
			return ((ISingleResult<spListarDetalleDoctorVisualizarResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarDetalleHistoriaPaciente")]
		public ISingleResult<spListarDetalleHistoriaPacienteResult> spListarDetalleHistoriaPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idHistoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idHistoria);
			return ((ISingleResult<spListarDetalleHistoriaPacienteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarDetalleHistoriaDoctor")]
		public ISingleResult<spListarDetalleHistoriaDoctorResult> spListarDetalleHistoriaDoctor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCuestionario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDoctor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCuestionario, idDoctor);
			return ((ISingleResult<spListarDetalleHistoriaDoctorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarDetalleHistoria")]
		public ISingleResult<spAgregarDetalleHistoriaResult> spAgregarDetalleHistoria([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string descripcion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nroSintomas, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string hemograma, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCuestionario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idHistoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descripcion, nroSintomas, hemograma, idCuestionario, idHistoria);
			return ((ISingleResult<spAgregarDetalleHistoriaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarDoctorEspe")]
		public ISingleResult<spListarDoctorEspeResult> spListarDoctorEspe()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spListarDoctorEspeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarUsuario")]
		public ISingleResult<spAgregarUsuarioResult> spAgregarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usuario", DbType="VarChar(50)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contrasena", DbType="VarChar(50)")] string contrasena)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuario, contrasena);
			return ((ISingleResult<spAgregarUsuarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarPaciente")]
		public ISingleResult<spAgregarPacienteResult> spAgregarPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Foto", DbType="VarChar(200)")] string foto, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombres", DbType="VarChar(50)")] string nombres, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellidos", DbType="VarChar(50)")] string apellidos, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sexo", DbType="VarChar(1)")] string sexo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Peso", DbType="Real")] System.Nullable<float> peso, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8)")] string dni, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estatura", DbType="Int")] System.Nullable<int> estatura, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaNac", DbType="Date")] System.Nullable<System.DateTime> fechaNac, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Distrito", DbType="VarChar(50)")] string distrito, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Provincia", DbType="VarChar(50)")] string provincia, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foto, nombres, apellidos, sexo, peso, dni, estatura, fechaNac, distrito, provincia, idUsuario);
			return ((ISingleResult<spAgregarPacienteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarCuestionario")]
		public ISingleResult<spAgregarCuestionarioResult> spAgregarCuestionario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NroPreguntas", DbType="Int")] System.Nullable<int> nroPreguntas, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nroPreguntas, idDoctor);
			return ((ISingleResult<spAgregarCuestionarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spActualizarCuestionario")]
		public ISingleResult<spActualizarCuestionarioResult> spActualizarCuestionario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCuestionario", DbType="Int")] System.Nullable<int> idCuestionario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NroPreguntas", DbType="Int")] System.Nullable<int> nroPreguntas, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCuestionario, nroPreguntas, idDoctor);
			return ((ISingleResult<spActualizarCuestionarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarCuestionario")]
		public ISingleResult<spListarCuestionarioResult> spListarCuestionario()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spListarCuestionarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spActualizarDiagnostico")]
		public ISingleResult<spActualizarDiagnosticoResult> spActualizarDiagnostico([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDiagnostico", DbType="Int")] System.Nullable<int> idDiagnostico, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripccion", DbType="VarChar(200)")] string descripccion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TipoAnemia", DbType="VarChar(50)")] string tipoAnemia, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tratamiento", DbType="VarChar(200)")] string tratamiento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDetalleHistoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDiagnostico, descripccion, tipoAnemia, tratamiento, idDoctor, idDetalleHistoria);
			return ((ISingleResult<spActualizarDiagnosticoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarDiagnostico")]
		public ISingleResult<spAgregarDiagnosticoResult> spAgregarDiagnostico([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripcion", DbType="VarChar(200)")] string descripcion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TipoAnemia", DbType="VarChar(50)")] string tipoAnemia, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tratamiento", DbType="VarChar(200)")] string tratamiento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDetalleHistoria", DbType="Int")] System.Nullable<int> idDetalleHistoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descripcion, tipoAnemia, tratamiento, idDoctor, idDetalleHistoria);
			return ((ISingleResult<spAgregarDiagnosticoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarDiagnostico")]
		public ISingleResult<spListarDiagnosticoResult> spListarDiagnostico()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spListarDiagnosticoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spActualizarPregunta")]
		public ISingleResult<spActualizarPreguntaResult> spActualizarPregunta([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdPregunta", DbType="Int")] System.Nullable<int> idPregunta, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripcion", DbType="VarChar(200)")] string descripcion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCuestionario", DbType="Int")] System.Nullable<int> idCuestionario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPregunta, descripcion, idCuestionario);
			return ((ISingleResult<spActualizarPreguntaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAgregarPregunta")]
		public ISingleResult<spAgregarPreguntaResult> spAgregarPregunta([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripcion", DbType="VarChar(200)")] string descripcion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCuestionario", DbType="Int")] System.Nullable<int> idCuestionario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descripcion, idCuestionario);
			return ((ISingleResult<spAgregarPreguntaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListarPregunta")]
		public ISingleResult<spListarPreguntaResult> spListarPregunta()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spListarPreguntaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spBuscarPreguntaCu")]
		public ISingleResult<spBuscarPreguntaCuResult> spBuscarPreguntaCu([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDoctor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDoctor);
			return ((ISingleResult<spBuscarPreguntaCuResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alimento")]
	public partial class Alimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdAlimento;
		
		private System.Data.Linq.Binary _Foto;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private System.Nullable<float> _cantidad;
		
		private System.Nullable<float> _calorias;
		
		private System.Nullable<float> _proteina;
		
		private System.Nullable<float> _carbohidratos;
		
		private System.Nullable<float> _grasas;
		
		private System.Nullable<float> _hierro;
		
		private System.Nullable<float> _vitaminas;
		
		private EntitySet<Receta> _Receta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlimentoChanging(string value);
    partial void OnIdAlimentoChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OncantidadChanging(System.Nullable<float> value);
    partial void OncantidadChanged();
    partial void OncaloriasChanging(System.Nullable<float> value);
    partial void OncaloriasChanged();
    partial void OnproteinaChanging(System.Nullable<float> value);
    partial void OnproteinaChanged();
    partial void OncarbohidratosChanging(System.Nullable<float> value);
    partial void OncarbohidratosChanged();
    partial void OngrasasChanging(System.Nullable<float> value);
    partial void OngrasasChanged();
    partial void OnhierroChanging(System.Nullable<float> value);
    partial void OnhierroChanged();
    partial void OnvitaminasChanging(System.Nullable<float> value);
    partial void OnvitaminasChanged();
    #endregion
		
		public Alimento()
		{
			this._Receta = new EntitySet<Receta>(new Action<Receta>(this.attach_Receta), new Action<Receta>(this.detach_Receta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlimento", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdAlimento
		{
			get
			{
				return this._IdAlimento;
			}
			set
			{
				if ((this._IdAlimento != value))
				{
					this.OnIdAlimentoChanging(value);
					this.SendPropertyChanging();
					this._IdAlimento = value;
					this.SendPropertyChanged("IdAlimento");
					this.OnIdAlimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(300)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Real")]
		public System.Nullable<float> cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calorias", DbType="Real")]
		public System.Nullable<float> calorias
		{
			get
			{
				return this._calorias;
			}
			set
			{
				if ((this._calorias != value))
				{
					this.OncaloriasChanging(value);
					this.SendPropertyChanging();
					this._calorias = value;
					this.SendPropertyChanged("calorias");
					this.OncaloriasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proteina", DbType="Real")]
		public System.Nullable<float> proteina
		{
			get
			{
				return this._proteina;
			}
			set
			{
				if ((this._proteina != value))
				{
					this.OnproteinaChanging(value);
					this.SendPropertyChanging();
					this._proteina = value;
					this.SendPropertyChanged("proteina");
					this.OnproteinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carbohidratos", DbType="Real")]
		public System.Nullable<float> carbohidratos
		{
			get
			{
				return this._carbohidratos;
			}
			set
			{
				if ((this._carbohidratos != value))
				{
					this.OncarbohidratosChanging(value);
					this.SendPropertyChanging();
					this._carbohidratos = value;
					this.SendPropertyChanged("carbohidratos");
					this.OncarbohidratosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grasas", DbType="Real")]
		public System.Nullable<float> grasas
		{
			get
			{
				return this._grasas;
			}
			set
			{
				if ((this._grasas != value))
				{
					this.OngrasasChanging(value);
					this.SendPropertyChanging();
					this._grasas = value;
					this.SendPropertyChanged("grasas");
					this.OngrasasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierro", DbType="Real")]
		public System.Nullable<float> hierro
		{
			get
			{
				return this._hierro;
			}
			set
			{
				if ((this._hierro != value))
				{
					this.OnhierroChanging(value);
					this.SendPropertyChanging();
					this._hierro = value;
					this.SendPropertyChanged("hierro");
					this.OnhierroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vitaminas", DbType="Real")]
		public System.Nullable<float> vitaminas
		{
			get
			{
				return this._vitaminas;
			}
			set
			{
				if ((this._vitaminas != value))
				{
					this.OnvitaminasChanging(value);
					this.SendPropertyChanging();
					this._vitaminas = value;
					this.SendPropertyChanged("vitaminas");
					this.OnvitaminasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alimento_Receta", Storage="_Receta", ThisKey="IdAlimento", OtherKey="IdAlimento")]
		public EntitySet<Receta> Receta
		{
			get
			{
				return this._Receta;
			}
			set
			{
				this._Receta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Receta(Receta entity)
		{
			this.SendPropertyChanging();
			entity.Alimento = this;
		}
		
		private void detach_Receta(Receta entity)
		{
			this.SendPropertyChanging();
			entity.Alimento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cuestionario")]
	public partial class Cuestionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdCuestionario;
		
		private System.Nullable<int> _NroPreguntas;
		
		private string _IdDoctor;
		
		private string _IdPregunta;
		
		private EntitySet<DetalleHistoria> _DetalleHistoria;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Pregunta> _Pregunta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCuestionarioChanging(string value);
    partial void OnIdCuestionarioChanged();
    partial void OnNroPreguntasChanging(System.Nullable<int> value);
    partial void OnNroPreguntasChanged();
    partial void OnIdDoctorChanging(string value);
    partial void OnIdDoctorChanged();
    partial void OnIdPreguntaChanging(string value);
    partial void OnIdPreguntaChanged();
    #endregion
		
		public Cuestionario()
		{
			this._DetalleHistoria = new EntitySet<DetalleHistoria>(new Action<DetalleHistoria>(this.attach_DetalleHistoria), new Action<DetalleHistoria>(this.detach_DetalleHistoria));
			this._Doctor = default(EntityRef<Doctor>);
			this._Pregunta = default(EntityRef<Pregunta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					this.OnIdCuestionarioChanging(value);
					this.SendPropertyChanging();
					this._IdCuestionario = value;
					this.SendPropertyChanged("IdCuestionario");
					this.OnIdCuestionarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPreguntas", DbType="Int")]
		public System.Nullable<int> NroPreguntas
		{
			get
			{
				return this._NroPreguntas;
			}
			set
			{
				if ((this._NroPreguntas != value))
				{
					this.OnNroPreguntasChanging(value);
					this.SendPropertyChanging();
					this._NroPreguntas = value;
					this.SendPropertyChanged("NroPreguntas");
					this.OnNroPreguntasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="VarChar(5)")]
		public string IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDoctorChanging(value);
					this.SendPropertyChanging();
					this._IdDoctor = value;
					this.SendPropertyChanged("IdDoctor");
					this.OnIdDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="VarChar(5)")]
		public string IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					if (this._Pregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuestionario_DetalleHistoria", Storage="_DetalleHistoria", ThisKey="IdCuestionario", OtherKey="IdCuestionario")]
		public EntitySet<DetalleHistoria> DetalleHistoria
		{
			get
			{
				return this._DetalleHistoria;
			}
			set
			{
				this._DetalleHistoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Cuestionario", Storage="_Doctor", ThisKey="IdDoctor", OtherKey="IdDoctor", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Cuestionario.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Cuestionario.Add(this);
						this._IdDoctor = value.IdDoctor;
					}
					else
					{
						this._IdDoctor = default(string);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Cuestionario", Storage="_Pregunta", ThisKey="IdPregunta", OtherKey="IdPregunta", IsForeignKey=true)]
		public Pregunta Pregunta
		{
			get
			{
				return this._Pregunta.Entity;
			}
			set
			{
				Pregunta previousValue = this._Pregunta.Entity;
				if (((previousValue != value) 
							|| (this._Pregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pregunta.Entity = null;
						previousValue.Cuestionario.Remove(this);
					}
					this._Pregunta.Entity = value;
					if ((value != null))
					{
						value.Cuestionario.Add(this);
						this._IdPregunta = value.IdPregunta;
					}
					else
					{
						this._IdPregunta = default(string);
					}
					this.SendPropertyChanged("Pregunta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Cuestionario = this;
		}
		
		private void detach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Cuestionario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleHistoria")]
	public partial class DetalleHistoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDetalleHistoria;
		
		private string _Descripcion;
		
		private System.Nullable<int> _NroSintomas;
		
		private string _Hemograma;
		
		private string _IdCuestionario;
		
		private string _IdDiagnostico;
		
		private string _IdSintoma;
		
		private string _IdHistoria;
		
		private EntityRef<Cuestionario> _Cuestionario;
		
		private EntityRef<Diagnostico> _Diagnostico;
		
		private EntityRef<Historia> _Historia;
		
		private EntityRef<Sintoma> _Sintoma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetalleHistoriaChanging(string value);
    partial void OnIdDetalleHistoriaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnNroSintomasChanging(System.Nullable<int> value);
    partial void OnNroSintomasChanged();
    partial void OnHemogramaChanging(string value);
    partial void OnHemogramaChanged();
    partial void OnIdCuestionarioChanging(string value);
    partial void OnIdCuestionarioChanged();
    partial void OnIdDiagnosticoChanging(string value);
    partial void OnIdDiagnosticoChanged();
    partial void OnIdSintomaChanging(string value);
    partial void OnIdSintomaChanged();
    partial void OnIdHistoriaChanging(string value);
    partial void OnIdHistoriaChanged();
    #endregion
		
		public DetalleHistoria()
		{
			this._Cuestionario = default(EntityRef<Cuestionario>);
			this._Diagnostico = default(EntityRef<Diagnostico>);
			this._Historia = default(EntityRef<Historia>);
			this._Sintoma = default(EntityRef<Sintoma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistoria", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDetalleHistoria
		{
			get
			{
				return this._IdDetalleHistoria;
			}
			set
			{
				if ((this._IdDetalleHistoria != value))
				{
					this.OnIdDetalleHistoriaChanging(value);
					this.SendPropertyChanging();
					this._IdDetalleHistoria = value;
					this.SendPropertyChanged("IdDetalleHistoria");
					this.OnIdDetalleHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(250)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroSintomas", DbType="Int")]
		public System.Nullable<int> NroSintomas
		{
			get
			{
				return this._NroSintomas;
			}
			set
			{
				if ((this._NroSintomas != value))
				{
					this.OnNroSintomasChanging(value);
					this.SendPropertyChanging();
					this._NroSintomas = value;
					this.SendPropertyChanged("NroSintomas");
					this.OnNroSintomasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hemograma", DbType="VarChar(250)")]
		public string Hemograma
		{
			get
			{
				return this._Hemograma;
			}
			set
			{
				if ((this._Hemograma != value))
				{
					this.OnHemogramaChanging(value);
					this.SendPropertyChanging();
					this._Hemograma = value;
					this.SendPropertyChanged("Hemograma");
					this.OnHemogramaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="VarChar(5)")]
		public string IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					if (this._Cuestionario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCuestionarioChanging(value);
					this.SendPropertyChanging();
					this._IdCuestionario = value;
					this.SendPropertyChanged("IdCuestionario");
					this.OnIdCuestionarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiagnostico", DbType="VarChar(5)")]
		public string IdDiagnostico
		{
			get
			{
				return this._IdDiagnostico;
			}
			set
			{
				if ((this._IdDiagnostico != value))
				{
					if (this._Diagnostico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._IdDiagnostico = value;
					this.SendPropertyChanged("IdDiagnostico");
					this.OnIdDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSintoma", DbType="VarChar(5)")]
		public string IdSintoma
		{
			get
			{
				return this._IdSintoma;
			}
			set
			{
				if ((this._IdSintoma != value))
				{
					if (this._Sintoma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSintomaChanging(value);
					this.SendPropertyChanging();
					this._IdSintoma = value;
					this.SendPropertyChanged("IdSintoma");
					this.OnIdSintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistoria", DbType="VarChar(5)")]
		public string IdHistoria
		{
			get
			{
				return this._IdHistoria;
			}
			set
			{
				if ((this._IdHistoria != value))
				{
					if (this._Historia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHistoriaChanging(value);
					this.SendPropertyChanging();
					this._IdHistoria = value;
					this.SendPropertyChanged("IdHistoria");
					this.OnIdHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuestionario_DetalleHistoria", Storage="_Cuestionario", ThisKey="IdCuestionario", OtherKey="IdCuestionario", IsForeignKey=true)]
		public Cuestionario Cuestionario
		{
			get
			{
				return this._Cuestionario.Entity;
			}
			set
			{
				Cuestionario previousValue = this._Cuestionario.Entity;
				if (((previousValue != value) 
							|| (this._Cuestionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cuestionario.Entity = null;
						previousValue.DetalleHistoria.Remove(this);
					}
					this._Cuestionario.Entity = value;
					if ((value != null))
					{
						value.DetalleHistoria.Add(this);
						this._IdCuestionario = value.IdCuestionario;
					}
					else
					{
						this._IdCuestionario = default(string);
					}
					this.SendPropertyChanged("Cuestionario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diagnostico_DetalleHistoria", Storage="_Diagnostico", ThisKey="IdDiagnostico", OtherKey="IdDiagnostico", IsForeignKey=true)]
		public Diagnostico Diagnostico
		{
			get
			{
				return this._Diagnostico.Entity;
			}
			set
			{
				Diagnostico previousValue = this._Diagnostico.Entity;
				if (((previousValue != value) 
							|| (this._Diagnostico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diagnostico.Entity = null;
						previousValue.DetalleHistoria.Remove(this);
					}
					this._Diagnostico.Entity = value;
					if ((value != null))
					{
						value.DetalleHistoria.Add(this);
						this._IdDiagnostico = value.IdDiagnostico;
					}
					else
					{
						this._IdDiagnostico = default(string);
					}
					this.SendPropertyChanged("Diagnostico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_DetalleHistoria", Storage="_Historia", ThisKey="IdHistoria", OtherKey="IdHistoria", IsForeignKey=true)]
		public Historia Historia
		{
			get
			{
				return this._Historia.Entity;
			}
			set
			{
				Historia previousValue = this._Historia.Entity;
				if (((previousValue != value) 
							|| (this._Historia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Historia.Entity = null;
						previousValue.DetalleHistoria.Remove(this);
					}
					this._Historia.Entity = value;
					if ((value != null))
					{
						value.DetalleHistoria.Add(this);
						this._IdHistoria = value.IdHistoria;
					}
					else
					{
						this._IdHistoria = default(string);
					}
					this.SendPropertyChanged("Historia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sintoma_DetalleHistoria", Storage="_Sintoma", ThisKey="IdSintoma", OtherKey="IdSintoma", IsForeignKey=true)]
		public Sintoma Sintoma
		{
			get
			{
				return this._Sintoma.Entity;
			}
			set
			{
				Sintoma previousValue = this._Sintoma.Entity;
				if (((previousValue != value) 
							|| (this._Sintoma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sintoma.Entity = null;
						previousValue.DetalleHistoria.Remove(this);
					}
					this._Sintoma.Entity = value;
					if ((value != null))
					{
						value.DetalleHistoria.Add(this);
						this._IdSintoma = value.IdSintoma;
					}
					else
					{
						this._IdSintoma = default(string);
					}
					this.SendPropertyChanged("Sintoma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diagnostico")]
	public partial class Diagnostico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDiagnostico;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private string _Descripcion;
		
		private string _TipoAnemia;
		
		private string _Tratamiento;
		
		private string _IdReceta;
		
		private string _IdDoctor;
		
		private EntitySet<DetalleHistoria> _DetalleHistoria;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Receta> _Receta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDiagnosticoChanging(string value);
    partial void OnIdDiagnosticoChanged();
    partial void OnfechaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTipoAnemiaChanging(string value);
    partial void OnTipoAnemiaChanged();
    partial void OnTratamientoChanging(string value);
    partial void OnTratamientoChanged();
    partial void OnIdRecetaChanging(string value);
    partial void OnIdRecetaChanged();
    partial void OnIdDoctorChanging(string value);
    partial void OnIdDoctorChanged();
    #endregion
		
		public Diagnostico()
		{
			this._DetalleHistoria = new EntitySet<DetalleHistoria>(new Action<DetalleHistoria>(this.attach_DetalleHistoria), new Action<DetalleHistoria>(this.detach_DetalleHistoria));
			this._Doctor = default(EntityRef<Doctor>);
			this._Receta = default(EntityRef<Receta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiagnostico", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDiagnostico
		{
			get
			{
				return this._IdDiagnostico;
			}
			set
			{
				if ((this._IdDiagnostico != value))
				{
					this.OnIdDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._IdDiagnostico = value;
					this.SendPropertyChanged("IdDiagnostico");
					this.OnIdDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoAnemia", DbType="VarChar(50)")]
		public string TipoAnemia
		{
			get
			{
				return this._TipoAnemia;
			}
			set
			{
				if ((this._TipoAnemia != value))
				{
					this.OnTipoAnemiaChanging(value);
					this.SendPropertyChanging();
					this._TipoAnemia = value;
					this.SendPropertyChanged("TipoAnemia");
					this.OnTipoAnemiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="VarChar(200)")]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this.OnTratamientoChanging(value);
					this.SendPropertyChanging();
					this._Tratamiento = value;
					this.SendPropertyChanged("Tratamiento");
					this.OnTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReceta", DbType="VarChar(5)")]
		public string IdReceta
		{
			get
			{
				return this._IdReceta;
			}
			set
			{
				if ((this._IdReceta != value))
				{
					if (this._Receta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRecetaChanging(value);
					this.SendPropertyChanging();
					this._IdReceta = value;
					this.SendPropertyChanged("IdReceta");
					this.OnIdRecetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="VarChar(5)")]
		public string IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDoctorChanging(value);
					this.SendPropertyChanging();
					this._IdDoctor = value;
					this.SendPropertyChanged("IdDoctor");
					this.OnIdDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diagnostico_DetalleHistoria", Storage="_DetalleHistoria", ThisKey="IdDiagnostico", OtherKey="IdDiagnostico")]
		public EntitySet<DetalleHistoria> DetalleHistoria
		{
			get
			{
				return this._DetalleHistoria;
			}
			set
			{
				this._DetalleHistoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Diagnostico", Storage="_Doctor", ThisKey="IdDoctor", OtherKey="IdDoctor", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Diagnostico.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Diagnostico.Add(this);
						this._IdDoctor = value.IdDoctor;
					}
					else
					{
						this._IdDoctor = default(string);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receta_Diagnostico", Storage="_Receta", ThisKey="IdReceta", OtherKey="IdReceta", IsForeignKey=true)]
		public Receta Receta
		{
			get
			{
				return this._Receta.Entity;
			}
			set
			{
				Receta previousValue = this._Receta.Entity;
				if (((previousValue != value) 
							|| (this._Receta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Receta.Entity = null;
						previousValue.Diagnostico.Remove(this);
					}
					this._Receta.Entity = value;
					if ((value != null))
					{
						value.Diagnostico.Add(this);
						this._IdReceta = value.IdReceta;
					}
					else
					{
						this._IdReceta = default(string);
					}
					this.SendPropertyChanged("Receta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Diagnostico = this;
		}
		
		private void detach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Diagnostico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDoctor;
		
		private string _Foto;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Sexo;
		
		private string _dni;
		
		private System.Nullable<System.DateTime> _FechaNac;
		
		private string _Distrito;
		
		private string _Provincia;
		
		private string _Especialidad;
		
		private string _CMP;
		
		private string _IdUsuario;
		
		private string _IdDiagnostico;
		
		private EntitySet<Cuestionario> _Cuestionario;
		
		private EntitySet<Diagnostico> _Diagnostico;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDoctorChanging(string value);
    partial void OnIdDoctorChanged();
    partial void OnFotoChanging(string value);
    partial void OnFotoChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OndniChanging(string value);
    partial void OndniChanged();
    partial void OnFechaNacChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacChanged();
    partial void OnDistritoChanging(string value);
    partial void OnDistritoChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    partial void OnCMPChanging(string value);
    partial void OnCMPChanged();
    partial void OnIdUsuarioChanging(string value);
    partial void OnIdUsuarioChanged();
    partial void OnIdDiagnosticoChanging(string value);
    partial void OnIdDiagnosticoChanged();
    #endregion
		
		public Doctor()
		{
			this._Cuestionario = new EntitySet<Cuestionario>(new Action<Cuestionario>(this.attach_Cuestionario), new Action<Cuestionario>(this.detach_Cuestionario));
			this._Diagnostico = new EntitySet<Diagnostico>(new Action<Diagnostico>(this.attach_Diagnostico), new Action<Diagnostico>(this.detach_Diagnostico));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					this.OnIdDoctorChanging(value);
					this.SendPropertyChanging();
					this._IdDoctor = value;
					this.SendPropertyChanged("IdDoctor");
					this.OnIdDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarChar(200)")]
		public string Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(50)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this.OndniChanging(value);
					this.SendPropertyChanging();
					this._dni = value;
					this.SendPropertyChanged("dni");
					this.OndniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNac", DbType="Date")]
		public System.Nullable<System.DateTime> FechaNac
		{
			get
			{
				return this._FechaNac;
			}
			set
			{
				if ((this._FechaNac != value))
				{
					this.OnFechaNacChanging(value);
					this.SendPropertyChanging();
					this._FechaNac = value;
					this.SendPropertyChanged("FechaNac");
					this.OnFechaNacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distrito", DbType="VarChar(50)")]
		public string Distrito
		{
			get
			{
				return this._Distrito;
			}
			set
			{
				if ((this._Distrito != value))
				{
					this.OnDistritoChanging(value);
					this.SendPropertyChanging();
					this._Distrito = value;
					this.SendPropertyChanged("Distrito");
					this.OnDistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50)")]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(20)")]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMP", DbType="VarChar(6)")]
		public string CMP
		{
			get
			{
				return this._CMP;
			}
			set
			{
				if ((this._CMP != value))
				{
					this.OnCMPChanging(value);
					this.SendPropertyChanging();
					this._CMP = value;
					this.SendPropertyChanged("CMP");
					this.OnCMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="VarChar(5)")]
		public string IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiagnostico", DbType="VarChar(5)")]
		public string IdDiagnostico
		{
			get
			{
				return this._IdDiagnostico;
			}
			set
			{
				if ((this._IdDiagnostico != value))
				{
					this.OnIdDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._IdDiagnostico = value;
					this.SendPropertyChanged("IdDiagnostico");
					this.OnIdDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Cuestionario", Storage="_Cuestionario", ThisKey="IdDoctor", OtherKey="IdDoctor")]
		public EntitySet<Cuestionario> Cuestionario
		{
			get
			{
				return this._Cuestionario;
			}
			set
			{
				this._Cuestionario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Diagnostico", Storage="_Diagnostico", ThisKey="IdDoctor", OtherKey="IdDoctor")]
		public EntitySet<Diagnostico> Diagnostico
		{
			get
			{
				return this._Diagnostico;
			}
			set
			{
				this._Diagnostico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Doctor", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuestionario(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Cuestionario(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
		
		private void attach_Diagnostico(Diagnostico entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Diagnostico(Diagnostico entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Historia")]
	public partial class Historia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdHistoria;
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private string _Descripcioon;
		
		private string _IdDetalleHistoria;
		
		private EntitySet<DetalleHistoria> _DetalleHistoria;
		
		private EntitySet<Paciente> _Paciente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHistoriaChanging(string value);
    partial void OnIdHistoriaChanged();
    partial void OnFechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaCreacionChanged();
    partial void OnDescripcioonChanging(string value);
    partial void OnDescripcioonChanged();
    partial void OnIdDetalleHistoriaChanging(string value);
    partial void OnIdDetalleHistoriaChanged();
    #endregion
		
		public Historia()
		{
			this._DetalleHistoria = new EntitySet<DetalleHistoria>(new Action<DetalleHistoria>(this.attach_DetalleHistoria), new Action<DetalleHistoria>(this.detach_DetalleHistoria));
			this._Paciente = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Paciente), new Action<Paciente>(this.detach_Paciente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistoria", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdHistoria
		{
			get
			{
				return this._IdHistoria;
			}
			set
			{
				if ((this._IdHistoria != value))
				{
					this.OnIdHistoriaChanging(value);
					this.SendPropertyChanging();
					this._IdHistoria = value;
					this.SendPropertyChanged("IdHistoria");
					this.OnIdHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcioon", DbType="VarChar(500)")]
		public string Descripcioon
		{
			get
			{
				return this._Descripcioon;
			}
			set
			{
				if ((this._Descripcioon != value))
				{
					this.OnDescripcioonChanging(value);
					this.SendPropertyChanging();
					this._Descripcioon = value;
					this.SendPropertyChanged("Descripcioon");
					this.OnDescripcioonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistoria", DbType="VarChar(5)")]
		public string IdDetalleHistoria
		{
			get
			{
				return this._IdDetalleHistoria;
			}
			set
			{
				if ((this._IdDetalleHistoria != value))
				{
					this.OnIdDetalleHistoriaChanging(value);
					this.SendPropertyChanging();
					this._IdDetalleHistoria = value;
					this.SendPropertyChanged("IdDetalleHistoria");
					this.OnIdDetalleHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_DetalleHistoria", Storage="_DetalleHistoria", ThisKey="IdHistoria", OtherKey="IdHistoria")]
		public EntitySet<DetalleHistoria> DetalleHistoria
		{
			get
			{
				return this._DetalleHistoria;
			}
			set
			{
				this._DetalleHistoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_Paciente", Storage="_Paciente", ThisKey="IdHistoria", OtherKey="IdHistoria")]
		public EntitySet<Paciente> Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				this._Paciente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Historia = this;
		}
		
		private void detach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Historia = null;
		}
		
		private void attach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Historia = this;
		}
		
		private void detach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Historia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Indice")]
	public partial class Indice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idIndice;
		
		private System.Nullable<float> _Estatura;
		
		private System.Nullable<float> _Peso;
		
		private string _Clasificacion;
		
		private string _sexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidIndiceChanging(string value);
    partial void OnidIndiceChanged();
    partial void OnEstaturaChanging(System.Nullable<float> value);
    partial void OnEstaturaChanged();
    partial void OnPesoChanging(System.Nullable<float> value);
    partial void OnPesoChanged();
    partial void OnClasificacionChanging(string value);
    partial void OnClasificacionChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    #endregion
		
		public Indice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIndice", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idIndice
		{
			get
			{
				return this._idIndice;
			}
			set
			{
				if ((this._idIndice != value))
				{
					this.OnidIndiceChanging(value);
					this.SendPropertyChanging();
					this._idIndice = value;
					this.SendPropertyChanged("idIndice");
					this.OnidIndiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estatura", DbType="Real")]
		public System.Nullable<float> Estatura
		{
			get
			{
				return this._Estatura;
			}
			set
			{
				if ((this._Estatura != value))
				{
					this.OnEstaturaChanging(value);
					this.SendPropertyChanging();
					this._Estatura = value;
					this.SendPropertyChanged("Estatura");
					this.OnEstaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Real")]
		public System.Nullable<float> Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clasificacion", DbType="VarChar(50)")]
		public string Clasificacion
		{
			get
			{
				return this._Clasificacion;
			}
			set
			{
				if ((this._Clasificacion != value))
				{
					this.OnClasificacionChanging(value);
					this.SendPropertyChanging();
					this._Clasificacion = value;
					this.SendPropertyChanged("Clasificacion");
					this.OnClasificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="VarChar(1)")]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPersona;
		
		private string _Foto;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Sexo;
		
		private System.Nullable<float> _Peso;
		
		private string _dni;
		
		private System.Nullable<float> _Estatura;
		
		private System.Nullable<System.DateTime> _FechaNac;
		
		private string _Distrito;
		
		private string _Provincia;
		
		private string _IdHistoria;
		
		private string _IdUsuario;
		
		private EntityRef<Historia> _Historia;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPersonaChanging(string value);
    partial void OnIdPersonaChanged();
    partial void OnFotoChanging(string value);
    partial void OnFotoChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnPesoChanging(System.Nullable<float> value);
    partial void OnPesoChanged();
    partial void OndniChanging(string value);
    partial void OndniChanged();
    partial void OnEstaturaChanging(System.Nullable<float> value);
    partial void OnEstaturaChanged();
    partial void OnFechaNacChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacChanged();
    partial void OnDistritoChanging(string value);
    partial void OnDistritoChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnIdHistoriaChanging(string value);
    partial void OnIdHistoriaChanged();
    partial void OnIdUsuarioChanging(string value);
    partial void OnIdUsuarioChanged();
    #endregion
		
		public Paciente()
		{
			this._Historia = default(EntityRef<Historia>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarChar(200)")]
		public string Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(50)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Real")]
		public System.Nullable<float> Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this.OndniChanging(value);
					this.SendPropertyChanging();
					this._dni = value;
					this.SendPropertyChanged("dni");
					this.OndniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estatura", DbType="Real")]
		public System.Nullable<float> Estatura
		{
			get
			{
				return this._Estatura;
			}
			set
			{
				if ((this._Estatura != value))
				{
					this.OnEstaturaChanging(value);
					this.SendPropertyChanging();
					this._Estatura = value;
					this.SendPropertyChanged("Estatura");
					this.OnEstaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNac", DbType="Date")]
		public System.Nullable<System.DateTime> FechaNac
		{
			get
			{
				return this._FechaNac;
			}
			set
			{
				if ((this._FechaNac != value))
				{
					this.OnFechaNacChanging(value);
					this.SendPropertyChanging();
					this._FechaNac = value;
					this.SendPropertyChanged("FechaNac");
					this.OnFechaNacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distrito", DbType="VarChar(50)")]
		public string Distrito
		{
			get
			{
				return this._Distrito;
			}
			set
			{
				if ((this._Distrito != value))
				{
					this.OnDistritoChanging(value);
					this.SendPropertyChanging();
					this._Distrito = value;
					this.SendPropertyChanged("Distrito");
					this.OnDistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50)")]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistoria", DbType="VarChar(5)")]
		public string IdHistoria
		{
			get
			{
				return this._IdHistoria;
			}
			set
			{
				if ((this._IdHistoria != value))
				{
					if (this._Historia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHistoriaChanging(value);
					this.SendPropertyChanging();
					this._IdHistoria = value;
					this.SendPropertyChanged("IdHistoria");
					this.OnIdHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="VarChar(5)")]
		public string IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_Paciente", Storage="_Historia", ThisKey="IdHistoria", OtherKey="IdHistoria", IsForeignKey=true)]
		public Historia Historia
		{
			get
			{
				return this._Historia.Entity;
			}
			set
			{
				Historia previousValue = this._Historia.Entity;
				if (((previousValue != value) 
							|| (this._Historia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Historia.Entity = null;
						previousValue.Paciente.Remove(this);
					}
					this._Historia.Entity = value;
					if ((value != null))
					{
						value.Paciente.Add(this);
						this._IdHistoria = value.IdHistoria;
					}
					else
					{
						this._IdHistoria = default(string);
					}
					this.SendPropertyChanged("Historia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Paciente", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Paciente.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Paciente.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pregunta")]
	public partial class Pregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPregunta;
		
		private string _Descripcion;
		
		private EntitySet<Cuestionario> _Cuestionario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPreguntaChanging(string value);
    partial void OnIdPreguntaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Pregunta()
		{
			this._Cuestionario = new EntitySet<Cuestionario>(new Action<Cuestionario>(this.attach_Cuestionario), new Action<Cuestionario>(this.detach_Cuestionario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Cuestionario", Storage="_Cuestionario", ThisKey="IdPregunta", OtherKey="IdPregunta")]
		public EntitySet<Cuestionario> Cuestionario
		{
			get
			{
				return this._Cuestionario;
			}
			set
			{
				this._Cuestionario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuestionario(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = this;
		}
		
		private void detach_Cuestionario(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receta")]
	public partial class Receta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdReceta;
		
		private string _Nombre;
		
		private System.Nullable<float> _Tiempo;
		
		private string _Preparacion;
		
		private string _Tipo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Imagen;
		
		private string _Video;
		
		private string _IdAlimento;
		
		private EntitySet<Diagnostico> _Diagnostico;
		
		private EntityRef<Alimento> _Alimento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRecetaChanging(string value);
    partial void OnIdRecetaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTiempoChanging(System.Nullable<float> value);
    partial void OnTiempoChanged();
    partial void OnPreparacionChanging(string value);
    partial void OnPreparacionChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnImagenChanging(string value);
    partial void OnImagenChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnIdAlimentoChanging(string value);
    partial void OnIdAlimentoChanged();
    #endregion
		
		public Receta()
		{
			this._Diagnostico = new EntitySet<Diagnostico>(new Action<Diagnostico>(this.attach_Diagnostico), new Action<Diagnostico>(this.detach_Diagnostico));
			this._Alimento = default(EntityRef<Alimento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReceta", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdReceta
		{
			get
			{
				return this._IdReceta;
			}
			set
			{
				if ((this._IdReceta != value))
				{
					this.OnIdRecetaChanging(value);
					this.SendPropertyChanging();
					this._IdReceta = value;
					this.SendPropertyChanged("IdReceta");
					this.OnIdRecetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiempo", DbType="Real")]
		public System.Nullable<float> Tiempo
		{
			get
			{
				return this._Tiempo;
			}
			set
			{
				if ((this._Tiempo != value))
				{
					this.OnTiempoChanging(value);
					this.SendPropertyChanging();
					this._Tiempo = value;
					this.SendPropertyChanged("Tiempo");
					this.OnTiempoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preparacion", DbType="VarChar(500)")]
		public string Preparacion
		{
			get
			{
				return this._Preparacion;
			}
			set
			{
				if ((this._Preparacion != value))
				{
					this.OnPreparacionChanging(value);
					this.SendPropertyChanging();
					this._Preparacion = value;
					this.SendPropertyChanged("Preparacion");
					this.OnPreparacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="VarChar(250)")]
		public string Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="VarChar(200)")]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlimento", DbType="VarChar(5)")]
		public string IdAlimento
		{
			get
			{
				return this._IdAlimento;
			}
			set
			{
				if ((this._IdAlimento != value))
				{
					if (this._Alimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAlimentoChanging(value);
					this.SendPropertyChanging();
					this._IdAlimento = value;
					this.SendPropertyChanged("IdAlimento");
					this.OnIdAlimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receta_Diagnostico", Storage="_Diagnostico", ThisKey="IdReceta", OtherKey="IdReceta")]
		public EntitySet<Diagnostico> Diagnostico
		{
			get
			{
				return this._Diagnostico;
			}
			set
			{
				this._Diagnostico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alimento_Receta", Storage="_Alimento", ThisKey="IdAlimento", OtherKey="IdAlimento", IsForeignKey=true)]
		public Alimento Alimento
		{
			get
			{
				return this._Alimento.Entity;
			}
			set
			{
				Alimento previousValue = this._Alimento.Entity;
				if (((previousValue != value) 
							|| (this._Alimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alimento.Entity = null;
						previousValue.Receta.Remove(this);
					}
					this._Alimento.Entity = value;
					if ((value != null))
					{
						value.Receta.Add(this);
						this._IdAlimento = value.IdAlimento;
					}
					else
					{
						this._IdAlimento = default(string);
					}
					this.SendPropertyChanged("Alimento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diagnostico(Diagnostico entity)
		{
			this.SendPropertyChanging();
			entity.Receta = this;
		}
		
		private void detach_Diagnostico(Diagnostico entity)
		{
			this.SendPropertyChanging();
			entity.Receta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sintoma")]
	public partial class Sintoma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdSintoma;
		
		private string _Nombre;
		
		private EntitySet<DetalleHistoria> _DetalleHistoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSintomaChanging(string value);
    partial void OnIdSintomaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Sintoma()
		{
			this._DetalleHistoria = new EntitySet<DetalleHistoria>(new Action<DetalleHistoria>(this.attach_DetalleHistoria), new Action<DetalleHistoria>(this.detach_DetalleHistoria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSintoma", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdSintoma
		{
			get
			{
				return this._IdSintoma;
			}
			set
			{
				if ((this._IdSintoma != value))
				{
					this.OnIdSintomaChanging(value);
					this.SendPropertyChanging();
					this._IdSintoma = value;
					this.SendPropertyChanged("IdSintoma");
					this.OnIdSintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sintoma_DetalleHistoria", Storage="_DetalleHistoria", ThisKey="IdSintoma", OtherKey="IdSintoma")]
		public EntitySet<DetalleHistoria> DetalleHistoria
		{
			get
			{
				return this._DetalleHistoria;
			}
			set
			{
				this._DetalleHistoria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Sintoma = this;
		}
		
		private void detach_DetalleHistoria(DetalleHistoria entity)
		{
			this.SendPropertyChanging();
			entity.Sintoma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdUsuario;
		
		private string _Usuario1;
		
		private string _Contrasena;
		
		private EntitySet<Doctor> _Doctor;
		
		private EntitySet<Paciente> _Paciente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(string value);
    partial void OnIdUsuarioChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnContrasenaChanging(string value);
    partial void OnContrasenaChanged();
    #endregion
		
		public Usuario()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			this._Paciente = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Paciente), new Action<Paciente>(this.detach_Paciente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(50)")]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this.OnContrasenaChanging(value);
					this.SendPropertyChanging();
					this._Contrasena = value;
					this.SendPropertyChanged("Contrasena");
					this.OnContrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Doctor", Storage="_Doctor", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Paciente", Storage="_Paciente", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Paciente> Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				this._Paciente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Valores")]
	public partial class Valores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idValores;
		
		private System.Nullable<float> _Poblacion;
		
		private System.Nullable<float> _Normal;
		
		private System.Nullable<float> _Leve;
		
		private System.Nullable<float> _Moderado;
		
		private System.Nullable<float> _Severo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidValoresChanging(string value);
    partial void OnidValoresChanged();
    partial void OnPoblacionChanging(System.Nullable<float> value);
    partial void OnPoblacionChanged();
    partial void OnNormalChanging(System.Nullable<float> value);
    partial void OnNormalChanged();
    partial void OnLeveChanging(System.Nullable<float> value);
    partial void OnLeveChanged();
    partial void OnModeradoChanging(System.Nullable<float> value);
    partial void OnModeradoChanged();
    partial void OnSeveroChanging(System.Nullable<float> value);
    partial void OnSeveroChanged();
    #endregion
		
		public Valores()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idValores", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idValores
		{
			get
			{
				return this._idValores;
			}
			set
			{
				if ((this._idValores != value))
				{
					this.OnidValoresChanging(value);
					this.SendPropertyChanging();
					this._idValores = value;
					this.SendPropertyChanged("idValores");
					this.OnidValoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poblacion", DbType="Real")]
		public System.Nullable<float> Poblacion
		{
			get
			{
				return this._Poblacion;
			}
			set
			{
				if ((this._Poblacion != value))
				{
					this.OnPoblacionChanging(value);
					this.SendPropertyChanging();
					this._Poblacion = value;
					this.SendPropertyChanged("Poblacion");
					this.OnPoblacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Real")]
		public System.Nullable<float> Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leve", DbType="Real")]
		public System.Nullable<float> Leve
		{
			get
			{
				return this._Leve;
			}
			set
			{
				if ((this._Leve != value))
				{
					this.OnLeveChanging(value);
					this.SendPropertyChanging();
					this._Leve = value;
					this.SendPropertyChanged("Leve");
					this.OnLeveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moderado", DbType="Real")]
		public System.Nullable<float> Moderado
		{
			get
			{
				return this._Moderado;
			}
			set
			{
				if ((this._Moderado != value))
				{
					this.OnModeradoChanging(value);
					this.SendPropertyChanging();
					this._Moderado = value;
					this.SendPropertyChanged("Moderado");
					this.OnModeradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severo", DbType="Real")]
		public System.Nullable<float> Severo
		{
			get
			{
				return this._Severo;
			}
			set
			{
				if ((this._Severo != value))
				{
					this.OnSeveroChanging(value);
					this.SendPropertyChanging();
					this._Severo = value;
					this.SendPropertyChanged("Severo");
					this.OnSeveroChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spAgregarHistoriaResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarHistoriaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(29) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spListarHistoriasResult
	{
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private string _Paciente;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _Fecha_Nacimiento;
		
		private string _dni;
		
		private string _Ubigeo;
		
		public spListarHistoriasResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this._FechaCreacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(101)")]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Nacimiento]", Storage="_Fecha_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this._Fecha_Nacimiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this._dni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubigeo", DbType="VarChar(101)")]
		public string Ubigeo
		{
			get
			{
				return this._Ubigeo;
			}
			set
			{
				if ((this._Ubigeo != value))
				{
					this._Ubigeo = value;
				}
			}
		}
	}
	
	public partial class spListarHistoriaPacienteResult
	{
		
		private int _IdHistoria;
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private string _Paciente;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _Fecha_Nacimiento;
		
		private string _dni;
		
		private string _Ubigeo;
		
		public spListarHistoriaPacienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistoria", DbType="Int NOT NULL")]
		public int IdHistoria
		{
			get
			{
				return this._IdHistoria;
			}
			set
			{
				if ((this._IdHistoria != value))
				{
					this._IdHistoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this._FechaCreacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(101)")]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Nacimiento]", Storage="_Fecha_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this._Fecha_Nacimiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this._dni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubigeo", DbType="VarChar(101)")]
		public string Ubigeo
		{
			get
			{
				return this._Ubigeo;
			}
			set
			{
				if ((this._Ubigeo != value))
				{
					this._Ubigeo = value;
				}
			}
		}
	}
	
	public partial class spListarDetalleDoctorVisualizarResult
	{
		
		private int _IdDetalleHistoria;
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private string _Paciente;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _Fecha_Nacimiento;
		
		private string _dni;
		
		private string _Ubigeo;
		
		private string _Hemograma;
		
		private string _Descripcion;
		
		private System.Nullable<int> _NroSintomas;
		
		public spListarDetalleDoctorVisualizarResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistoria", DbType="Int NOT NULL")]
		public int IdDetalleHistoria
		{
			get
			{
				return this._IdDetalleHistoria;
			}
			set
			{
				if ((this._IdDetalleHistoria != value))
				{
					this._IdDetalleHistoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this._FechaCreacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(101)")]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Nacimiento]", Storage="_Fecha_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this._Fecha_Nacimiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this._dni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubigeo", DbType="VarChar(101)")]
		public string Ubigeo
		{
			get
			{
				return this._Ubigeo;
			}
			set
			{
				if ((this._Ubigeo != value))
				{
					this._Ubigeo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hemograma", DbType="VarChar(250)")]
		public string Hemograma
		{
			get
			{
				return this._Hemograma;
			}
			set
			{
				if ((this._Hemograma != value))
				{
					this._Hemograma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(250)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroSintomas", DbType="Int")]
		public System.Nullable<int> NroSintomas
		{
			get
			{
				return this._NroSintomas;
			}
			set
			{
				if ((this._NroSintomas != value))
				{
					this._NroSintomas = value;
				}
			}
		}
	}
	
	public partial class spListarDetalleHistoriaPacienteResult
	{
		
		private int _IdDetalleHistoria;
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private string _Descripcion;
		
		private System.Nullable<int> _NroSintomas;
		
		private string _Hemograma;
		
		private string _Paciente;
		
		private System.Nullable<System.DateTime> _Fecha_Nacimiento;
		
		private string _dni;
		
		private string _Ubigeo;
		
		public spListarDetalleHistoriaPacienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistoria", DbType="Int NOT NULL")]
		public int IdDetalleHistoria
		{
			get
			{
				return this._IdDetalleHistoria;
			}
			set
			{
				if ((this._IdDetalleHistoria != value))
				{
					this._IdDetalleHistoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this._FechaCreacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(250)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroSintomas", DbType="Int")]
		public System.Nullable<int> NroSintomas
		{
			get
			{
				return this._NroSintomas;
			}
			set
			{
				if ((this._NroSintomas != value))
				{
					this._NroSintomas = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hemograma", DbType="VarChar(250)")]
		public string Hemograma
		{
			get
			{
				return this._Hemograma;
			}
			set
			{
				if ((this._Hemograma != value))
				{
					this._Hemograma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(101)")]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Nacimiento]", Storage="_Fecha_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this._Fecha_Nacimiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this._dni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubigeo", DbType="VarChar(101)")]
		public string Ubigeo
		{
			get
			{
				return this._Ubigeo;
			}
			set
			{
				if ((this._Ubigeo != value))
				{
					this._Ubigeo = value;
				}
			}
		}
	}
	
	public partial class spListarDetalleHistoriaDoctorResult
	{
		
		private int _IdDetalleHistoria;
		
		private System.Nullable<System.DateTime> _FechaCreacion;
		
		private System.Nullable<int> _NroSintomas;
		
		private string _Descripcion;
		
		private string _Hemograma;
		
		private string _Paciente;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _Fecha_Nacimiento;
		
		private string _dni;
		
		private string _Ubigeo;
		
		public spListarDetalleHistoriaDoctorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistoria", DbType="Int NOT NULL")]
		public int IdDetalleHistoria
		{
			get
			{
				return this._IdDetalleHistoria;
			}
			set
			{
				if ((this._IdDetalleHistoria != value))
				{
					this._IdDetalleHistoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date")]
		public System.Nullable<System.DateTime> FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this._FechaCreacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroSintomas", DbType="Int")]
		public System.Nullable<int> NroSintomas
		{
			get
			{
				return this._NroSintomas;
			}
			set
			{
				if ((this._NroSintomas != value))
				{
					this._NroSintomas = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(250)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hemograma", DbType="VarChar(250)")]
		public string Hemograma
		{
			get
			{
				return this._Hemograma;
			}
			set
			{
				if ((this._Hemograma != value))
				{
					this._Hemograma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(101)")]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Nacimiento]", Storage="_Fecha_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this._Fecha_Nacimiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(8)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this._dni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubigeo", DbType="VarChar(101)")]
		public string Ubigeo
		{
			get
			{
				return this._Ubigeo;
			}
			set
			{
				if ((this._Ubigeo != value))
				{
					this._Ubigeo = value;
				}
			}
		}
	}
	
	public partial class spAgregarDetalleHistoriaResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarDetalleHistoriaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(39) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spListarDoctorEspeResult
	{
		
		private int _IdDoctor;
		
		private string _Doctor;
		
		public spListarDoctorEspeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="Int NOT NULL")]
		public int IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					this._IdDoctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="VarChar(124)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
	}
	
	public partial class spAgregarUsuarioResult
	{
		
		private string _CodUser;
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarUsuarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodUser", DbType="VarChar(6)")]
		public string CodUser
		{
			get
			{
				return this._CodUser;
			}
			set
			{
				if ((this._CodUser != value))
				{
					this._CodUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(28) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spAgregarPacienteResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarPacienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spAgregarCuestionarioResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarCuestionarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(17) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spActualizarCuestionarioResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spActualizarCuestionarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(23) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spListarCuestionarioResult
	{
		
		private int _IdCuestionario;
		
		private System.Nullable<int> _NroPreguntas;
		
		private System.Nullable<int> _IdDoctor;
		
		public spListarCuestionarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="Int NOT NULL")]
		public int IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					this._IdCuestionario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPreguntas", DbType="Int")]
		public System.Nullable<int> NroPreguntas
		{
			get
			{
				return this._NroPreguntas;
			}
			set
			{
				if ((this._NroPreguntas != value))
				{
					this._NroPreguntas = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="Int")]
		public System.Nullable<int> IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					this._IdDoctor = value;
				}
			}
		}
	}
	
	public partial class spActualizarDiagnosticoResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spActualizarDiagnosticoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(34) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spAgregarDiagnosticoResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarDiagnosticoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(17) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spListarDiagnosticoResult
	{
		
		private int _IdDiagnostico;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private string _Descripcion;
		
		private string _TipoAnemia;
		
		private string _Tratamiento;
		
		private System.Nullable<int> _IdDoctor;
		
		public spListarDiagnosticoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiagnostico", DbType="Int NOT NULL")]
		public int IdDiagnostico
		{
			get
			{
				return this._IdDiagnostico;
			}
			set
			{
				if ((this._IdDiagnostico != value))
				{
					this._IdDiagnostico = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this._fecha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoAnemia", DbType="VarChar(50)")]
		public string TipoAnemia
		{
			get
			{
				return this._TipoAnemia;
			}
			set
			{
				if ((this._TipoAnemia != value))
				{
					this._TipoAnemia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="VarChar(200)")]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this._Tratamiento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", DbType="Int")]
		public System.Nullable<int> IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					this._IdDoctor = value;
				}
			}
		}
	}
	
	public partial class spActualizarPreguntaResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spActualizarPreguntaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spAgregarPreguntaResult
	{
		
		private int _CodError;
		
		private string _Mensaje;
		
		public spAgregarPreguntaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodError", DbType="Int NOT NULL")]
		public int CodError
		{
			get
			{
				return this._CodError;
			}
			set
			{
				if ((this._CodError != value))
				{
					this._CodError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="VarChar(17) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this._Mensaje = value;
				}
			}
		}
	}
	
	public partial class spListarPreguntaResult
	{
		
		private int _IdPregunta;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IdCuestionario;
		
		public spListarPreguntaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					this._IdPregunta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="Int")]
		public System.Nullable<int> IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					this._IdCuestionario = value;
				}
			}
		}
	}
	
	public partial class spBuscarPreguntaCuResult
	{
		
		private int _IdPregunta;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IdCuestionario;
		
		public spBuscarPreguntaCuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					this._IdPregunta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="Int")]
		public System.Nullable<int> IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					this._IdCuestionario = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
